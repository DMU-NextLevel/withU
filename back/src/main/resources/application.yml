baseUrl: http://localhost:8080
DOMAIN: localhost

FRONT:
  baseUrl:
    http://localhost:3000

spring:
  application:
    name: demo
  config:
    import: optional:file:.env[.properties]
#  profiles:
#    active: prod
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 3
  jpa:
    properties:
      hibernate:
        show_sql: true
    hibernate:
      ddl-auto: update
  sql:
    init:
      mode: never

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_ID}
            client-secret: ${GOOGLE_SECRET}
            redirect-uri: ${FRONT.baseUrl}/google/callback # ${baseUrl}/login/oauth2/code/google
            scope:
              - profile
              - email
            # scope:
              # - account_email
          kakao:
            client-id: ${KAKAO_ID}
            client-secret: ${KAKAO_SECRET}
            redirect-uri: ${FRONT.baseUrl}/kakao/callback # ${baseUrl}/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post

          naver:
            client-id: ${NAVER_ID}
            client-secret: ${NAVER_SECRET}
            redirect-uri: ${FRONT.baseUrl}/naver/callback # ${baseUrl}/login/oauth2/code/naver
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # Naver 응답 값 resultCode, message, response 중 response 지정

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id # 유저 정보 조회 시 반환되는 최상위 필드명으로 해야 한다.

          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
            user-name-attribute: id  # Google의 사용자 식별자 (고유 ID)


jwt:
  secret: ${JWT_SECRET}
  access-token-time: 9999999  #3600 # 60 * 60 1시간
  refresh-token-time: 9999999  #604800 # 60 * 60 * 24 * 7 1주일

server:
  servlet:
    context-path: /
  port: 8080

payment:
  toss:
    approve_url: https://api.tosspayments.com/v1/payments/confirm
    client_key: ${TOSS_CLIENT}
    secret_key: ${TOSS_SECRET}

img:
  max_len: 20
  default_dir: ${IMG_PATH}

page_count: 8
rank_day: 7 # 일주일

email:
  EMAIL_TIME: 300000 # 5 * 60 * 1000 # 5분
  EMAIL: ${EMAIL}
  EMAIL_PASSWORD: "${EMAIL_PASSWORD}"

---
spring:
  config:
    on-profile: prod
  datasource:
    hikari:
      maximum-pool-size: 10

baseUrl: https://api.nextlevel.r-e.kr
DOMAIN: nextlevel.r-e.kr

FRONT:
  baseUrl:
    https://nextlevel.r-e.kr